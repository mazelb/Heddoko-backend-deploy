@mixin mobile {
  @media (max-width: #{$tablet_width - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet_width}) and (max-width: #{$desktop_width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop_width}) {
    @content;
  }
}

@mixin border-radius($radius: 3px) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

// Single side border-radius
@mixin border-top-radius($radius: 3px) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin border-right-radius($radius: 3px) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius: 3px) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius: 3px) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin transition-full( $transition-property: all, $transition-time: .2s, $transition-method: ease ) {
  -webkit-transition: $transition-property $transition-time $transition-method;
  -moz-transition: $transition-property $transition-time $transition-method;
  -ms-transition: $transition-property $transition-time $transition-method;
  -o-transition: $transition-property $transition-time $transition-method;
  transition: $transition-property $transition-time $transition-method;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin margin-top-10() {
    margin-top: 10px;
}

@mixin pointer() {
    cursor: pointer;
}


@mixin transform($transform){
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
    transform: $transform;
}

@mixin transition($transition){
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition:$transition;
  transition: $transition;
}

@mixin animation($animation){
  -webkit-animation: $animation;
  -moz-animation: $animation;
  -ms-animation: $animation;
  -o-animation:$animation;
  animation: $animation;
}

@mixin box-shadow($box-shadow){
  -webkit-box-shadow: $box-shadow;
  -moz-box-shadow: $box-shadow;
  -ms-box-shadow: $box-shadow;
  -o-box-shadow: $box-shadow;
  box-shadow: $box-shadow;
}

@mixin border-radius($border-radius) {
    -webkit-border-radius: $border-radius;
    -moz-border-radius: $border-radius;
    -ms-border-radius: $border-radius;
    -o-border-radius: $border-radius;
    border-radius: $border-radius;
}

@mixin vendor-prefix($name, $argument) {
    -webkit-#{$name}: #{$argument};
    -ms-#{$name}: #{$argument};
    -moz-#{$name}: #{$argument};
    -o-#{$name}: #{$argument};
    #{$name}: #{$argument};
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}